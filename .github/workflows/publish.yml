name: Publish to crates.io

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to crates.io (false = dry-run only)'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Get tag name
        id: tag
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "TRIGGERED_BY_TAG=true" >> $GITHUB_OUTPUT
          else
            echo "TRIGGERED_BY_TAG=false" >> $GITHUB_OUTPUT
          fi

      - name: Show publish mode
        run: |
          if [ "${{ steps.tag.outputs.TRIGGERED_BY_TAG }}" == "true" ]; then
            echo "ðŸš€ Publishing triggered by tag: ${{ steps.tag.outputs.TAG_NAME }}"
            echo "ðŸ“¦ Will publish all crates to crates.io"
          elif [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "ðŸš€ Manual publish triggered"
            echo "ðŸ“¦ Will publish all crates to crates.io"
          else
            echo "ðŸ§ª Dry run mode"
            echo "ðŸ“‹ Will only validate packages without publishing"
          fi

      - name: Publish core
        run: |
          cd core
          if [ "${{ steps.tag.outputs.TRIGGERED_BY_TAG }}" == "true" ] || [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "ðŸš€ PUBLISHING: cfgloader-core to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "ðŸ§ª DRY RUN: Would publish cfgloader-core"
            cargo publish --dry-run
          fi

      - name: Wait for core publish
        if: steps.tag.outputs.TRIGGERED_BY_TAG == 'true' || github.event.inputs.publish == 'true'
        run: sleep 30

      - name: Publish macros
        run: |
          cd macros
          if [ "${{ steps.tag.outputs.TRIGGERED_BY_TAG }}" == "true" ] || [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "ðŸš€ PUBLISHING: cfgloader_rs_macros to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "ðŸ§ª DRY RUN: Would publish cfgloader_rs_macros"
            cargo publish --dry-run
          fi

      - name: Wait for macros publish
        if: steps.tag.outputs.TRIGGERED_BY_TAG == 'true' || github.event.inputs.publish == 'true'
        run: sleep 30

      - name: Publish cfgloader
        run: |
          cd cfgloader
          if [ "${{ steps.tag.outputs.TRIGGERED_BY_TAG }}" == "true" ] || [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "ðŸš€ PUBLISHING: cfgloader_rs to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "ðŸ§ª DRY RUN: Would publish cfgloader_rs"
            cargo publish --dry-run
          fi

      - name: Create GitHub Release
        if: steps.tag.outputs.TRIGGERED_BY_TAG == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          release_name: Release ${{ steps.tag.outputs.TAG_NAME }}
          body: |
            ðŸŽ‰ CFGLoader ${{ steps.tag.outputs.TAG_NAME }} Released!
            
            ## ðŸ“¦ Published Crates
            - `cfgloader-core` v${{ steps.tag.outputs.TAG_NAME }}
            - `cfgloader_rs_macros` v${{ steps.tag.outputs.TAG_NAME }}
            - `cfgloader_rs` v${{ steps.tag.outputs.TAG_NAME }}
            
            ## ðŸ“š Documentation
            - [docs.rs/cfgloader_rs](https://docs.rs/cfgloader_rs)
            - [crates.io/crates/cfgloader_rs](https://crates.io/crates/cfgloader_rs)
            
            ## ðŸš€ Usage
            ```toml
            [dependencies]
            cfgloader_rs = "${{ steps.tag.outputs.TAG_NAME }}"
            ```
          draft: false
          prerelease: false
