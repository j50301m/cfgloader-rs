name: Publish to crates.io

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to crates.io (false = dry-run only)'
        required: false
        default: false
        type: boolean

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-versions.outputs.version-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version changes
        id: check-versions
        run: |
          # For manual dispatch, we can force check all crates
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger detected"
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "Manual dispatch: will publish all crates"
          else
            # Check if workspace version changed in root Cargo.toml
            if git diff HEAD~1 HEAD --name-only | grep -q "^Cargo\.toml$"; then
              echo "Root Cargo.toml changed, checking workspace version..."
              
              if git diff HEAD~1 HEAD Cargo.toml | grep -q "^+.*version.*="; then
                echo "Workspace version changed - will publish all crates"
                echo "version-changed=true" >> $GITHUB_OUTPUT
              else
                echo "No workspace version change detected"
                echo "version-changed=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "No workspace Cargo.toml changes detected"
              echo "version-changed=false" >> $GITHUB_OUTPUT
            fi
          fi

  publish:
    needs: check-version
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version-changed == 'true'
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish core
        run: |
          cd core
          if [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "PUBLISHING: cfgloader-rs-core to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "DRY RUN: Would publish cfgloader-rs-core"
            cargo publish --dry-run
          fi

      - name: Wait for core publish
        run: sleep 30

      - name: Publish macros
        run: |
          cd macros
          if [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "PUBLISHING: cfgloader-rs-macros to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "DRY RUN: Would publish cfgloader-rs-macros"
            cargo publish --dry-run
          fi

      - name: Wait for macros publish
        run: sleep 30

      - name: Publish cfgloader
        run: |
          cd cfgloader
          if [ "${{ github.event.inputs.publish }}" == "true" ]; then
            echo "PUBLISHING: cfgloader-rs to crates.io"
            cargo publish --token "$CARGO_REGISTRY_TOKEN"
          else
            echo "DRY RUN: Would publish cfgloader-rs"
            cargo publish --dry-run
          fi
